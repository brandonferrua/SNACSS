
@mixin snacss-helpers {
	
}

@function emCalc($px-size) {
    $emValue : $px-size/$font-size+em;
    @return $emValue;
}
@function baselineCalc($px-size) {
	$adjustBaseline : $px-size;
	@return $adjustBaseline;
}

@mixin setup-baseline($font-size) {
	* html { font-size: 100% * ($font-size / 16px); }
	html {
		font-size: $font-size;
		line-height: baselineCalc($font-size);
	}
}

// Hue Adjustment based on skin color variable
// --------------------------------------------------------- //

@mixin hueAdjust($target, $property, $value, $body-color: $body-color) {
    @if ($body-color == dark) {
        #{$target} : lighten($property,$value);
    }
    @if ($body-color == light) {
        #{$target} : darken($property,$value);
    }
}

// Utility -> Helper (u-helper-z)
//
// ? Default helper objects & vendor prefixes
//
// ? Level 1.00 (02/17/12)
//
// ? Components:
//     - Helpers
//         - Clear Fix
//         - Disabled
//         - Element Go BOOM!!
//         - Font
//         - Make It POP
//         - Sticky Footer
//     - CSS3
//         - Background Gradient
//         - Border Radius
//         - Flex Box
//         - Box Shadow
//         - @font face
//         - Transition
//     - Shapes
//         - Arrows
//
// --------------------------------------------------------- //

// Helpers
// --------------------------------------------------------- //

// Clear Fix

@mixin group {
    &:before, &:after { content: ""; display: table; }
    &:after { clear: both; }
    // .ie7 &,
    .ie8 & { zoom: 1; }
}

// Disabled

@mixin disabled { cursor: default; opacity: .25; }

// Element Go BOOM!

@mixin elementGoBOOM ($text: false, $boxModel: false, $layout: false) {
    @if $text == true {
        color: $font-color;
        direction: ltr;
        font-family: $font-family;
        font-size: $font-size;
        font-style: normal;
        font-variant: normal;
        font-weight: normal;
        letter-spacing: normal;
        line-height: $leading;
        text-align: left;
        text-decoration: none;
        text-shadow: none;
        text-transform: none;
        vertical-align: baseline;
        white-space: normal;
        word-spacing: normal;
    }
    @else if $boxModel == true {
        background-color: transparent;
        background-image: none;
        border-width: 0;
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        -ms-box-shadow: none;
        -o-box-shadow: none;
        box-shadow: none;
        height: auto;
        list-style-type: disc;
        list-style-image: none;
        list-style-position: outside;
        margin: 0;
        max-height: none;
        max-width: none;
        min-height: 0;
        min-width: 0;
        padding: 0;
        width: auto;
    }
    @else if $layout == true {
        float: none;
        overflow: visible;
        position: static;
        left: auto; top: auto;
        visibility: visible;
    }
    @else {

        // Text

        color: $font-color;
        direction: ltr;
        font-family: $font-family;
        font-size: $font-size;
        font-style: normal;
        font-variant: normal;
        font-weight: normal;
        letter-spacing: normal;
        line-height: $leading;
        text-align: left;
        text-decoration: none;
        text-shadow: none;
        text-transform: none;
        vertical-align: baseline;
        white-space: normal;
        word-spacing: normal;

        // Box Model

        background-color: transparent;
        background-image: none;
        border-width: 0;
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        -ms-box-shadow: none;
        -o-box-shadow: none;
        box-shadow: none;
        height: auto;
        list-style-type: disc;
        list-style-image: none;
        list-style-position: outside;
        margin: 0;
        max-height: none;
        max-width: none;
        min-height: 0;
        min-width: 0;
        padding: 0;
        width: auto;

        // Layout

        float: none;
        overflow: visible;
        position: static;
        left: auto; top: auto;
        visibility: visible;

        // Deal with Boom on buttons
        &:active { 
            -webkit-box-shadow: none;
            -moz-box-shadow: none;
            -ms-box-shadow: none;
            -o-box-shadow: none;
            box-shadow: none; 
        }
    }
}

// Font

@mixin font(
    $font-style: false,
    $text-transform: false,
    $font-weight: false,
    $font-size: false,
    $line-height: false, 
    $font-family: false
) {
    @if ($font-style) {
        font-style: $font-style;
    }

    @if ($text-transform) {
        text-transform: $text-transform;
    }
    
    @if ($font-weight) {
        font-weight: $font-weight;
    }
    
    @if ($font-size) {
        font-size: $font-size;
    }

    @if ($line-height) {
        line-height: $line-height;
    }

    @if ($font-family) {
        font-family: $font-family;
    }
}

// Make It POP!!!

@mixin makeItPOP {
    font-weight: bold;
    text-transform: uppercase;
}

// For Sticky Footer
// -------------------------------------------------------------------------------------------------------------------
// Sets appropiate styles to elements for a sticky footer
// @  Courtesy of the blog post by Ryan Fait. http://ryanfait.com/resources/footer-stick-to-bottom-of-page/
// -------------------------------------------------------------------------------------------------------------------
// Use: 
//   @include sticky-footer(400px, "#site-main", "#footer-push", "#footer")
// --------------------------------------------------------------------------------- //

@mixin sticky-footer($footer-height, $root-selector: unquote("#root"), $root-footer-selector: unquote("#root_footer"), $footer-selector: unquote("#footer")) {
    html, body { height: 100%; }
    #site { height: 100%; }
    #{$root-selector} {
        clear: both;
        min-height: 100%;
        height: auto !important;
        height: 100%;
        margin-bottom: -$footer-height;
    #{$root-footer-selector} {
        height: $footer-height; } }
    #{$footer-selector} {
        clear: both;
        position: relative;
        height: $footer-height; }
}

// CSS3
// --------------------------------------------------------- //

// Support Triggers

$progressive-mozilla          : true  !default; // -moz
$progressive-webkit           : true  !default; // -webkit
$progressive-webkit-gradients : true  !default;
$progressive-opera            : true  !default; // -o
$progressive-microsoft        : true  !default; //-ms
$progressive-khtml            : false !default; // -khtml
$progressive-svg              : false !default;
$progressive-pie              : false !default;

// Progressive Blanket

@mixin progressive($property, $value,
    $webkit   : $progressive-webkit,
    $khtml    : $progressive-khtml,
    $moz      : $progressive-mozilla,
    $ms       : $progressive-microsoft,
    $o        : $progressive-opera,
    $official : true
) {
    @if $webkit   and $progressive-webkit     { -webkit-#{$property} : $value; }
    @if $khtml    and $progressive-khtml      {  -khtml-#{$property} : $value; }
    @if $moz      and $progressive-mozilla    {    -moz-#{$property} : $value; }
    @if $ms       and $progressive-microsoft  {     -ms-#{$property} : $value; }
    @if $o        and $progressive-opera      {      -o-#{$property} : $value; }
    @if $official                             {         #{$property} : $value; }
}

@mixin progressive-value($property, $value,
    $webkit   : $progressive-webkit,
    $khtml    : $progressive-khtml,
    $moz      : $progressive-mozilla,
    $ms       : $progressive-microsoft,
    $o        : $progressive-opera,
    $official : true
) {
    @if $webkit   and $progressive-webkit     { #{$property} : -webkit-#{$value}; }
    @if $khtml    and $progressive-khtml      { #{$property} :  -khtml-#{$value}; }
    @if $moz      and $progressive-mozilla    { #{$property} :    -moz-#{$value}; }
    @if $ms       and $progressive-microsoft  { #{$property} :     -ms-#{$value}; }
    @if $o        and $progressive-opera      { #{$property} :      -o-#{$value}; }
    @if $official                             { #{$property} :         #{$value}; }
}

// Background Gradient

@mixin backgroundGradient($gradient) {
    @if ($gradient) {
        @include progressive-value(background-image, $gradient);
    }
    @else {
        // Do not generate CSS
    }
}

// Border Radius (Needs to be extended with custom Ruby functions to better support standard formatting)

@mixin borderRadius($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-radius, $radius);
    }
}

@mixin borderRadius-top($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-top-right-radius, $radius);
        @include progressive(border-top-left-radius, $radius);
    }
}

@mixin borderRadius-right($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-top-right-radius, $radius);
        @include progressive(border-bottom-right-radius, $radius);
    }
}

@mixin borderRadius-top-right($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-top-right-radius, $radius);
    }
}

@mixin borderRadius-bottom($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-bottom-right-radius, $radius);
        @include progressive(border-bottom-left-radius, $radius);
    }
}

@mixin borderRadius-bottom-left($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-bottom-left-radius, $radius);
    }
}

@mixin borderRadius-bottom-right($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-bottom-right-radius, $radius);
    }
}

@mixin borderRadius-left($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-top-left-radius, $radius);
        @include progressive(border-bottom-left-radius, $radius);
    }
}

@mixin borderRadius-top-left($radius) {
    @if ($radius == null) {
        // Do not generate CSS
    }
    @else {
        @include progressive(border-top-left-radius, $radius);
    }
}

// Box Flex (In progress while official spec is still being drafted *IMPORTANT* Ensure fall-backs are in place)

@mixin boxFlex-container($null: true) {
    @if ($null == false) {
        // Do not generate CSS
    }
    @else {
        @include progressive-value(display, box); // Proposed Spec
    }
}

@mixin boxFlex-item($null: true) {
    @if ($null == false) {
        // Do not generate CSS
    }
    @else {
        @include progressive(box-flex, 1); // Proposed Spec

        > a { display: block; }
    }
}

// Box Shadow (Max 6, needs Ruby custom functions for compacting variables)

@mixin boxShadow(
    $shadow,
    $shadow-2: false,
    $shadow-3: false,
    $shadow-4: false,
    $shadow-5: false,
    $shadow-6: false
) {
    @if ($shadow == null) {
        // Generate no CSS
    }
    @else if ($shadow-6) {
        @include progressive(box-shadow, $shadow unquote(",") $shadow-2 unquote(",") $shadow-3 unquote(",") $shadow-4 unquote(",") $shadow-5 unquote(",") $shadow-6);
    }
    @else if ($shadow-5) {
        @include progressive(box-shadow, $shadow unquote(",") $shadow-2 unquote(",") $shadow-3 unquote(",") $shadow-4 unquote(",") $shadow-5);
    }
    @else if ($shadow-4) {
        @include progressive(box-shadow, $shadow unquote(",") $shadow-2 unquote(",") $shadow-3 unquote(",") $shadow-4);
    }
    @else if ($shadow-3) {
        @include progressive(box-shadow, $shadow unquote(",") $shadow-2 unquote(",") $shadow-3);
    }
    @else if ($shadow-2) {
        @include progressive(box-shadow, $shadow unquote(",") $shadow-2);
    }
    @else {
        @include progressive(box-shadow, $shadow);
    }
}

// Font Face

@mixin font-face(
    $name, 
    $font-files, 
    $eot: false,
    $weight: false,
    $style: false
) {
    $iefont: unquote("#{$eot}?#iefix");
    @font-face {
    font-family: quote($name);
    @if $eot {
        src: font-url($eot);
        $font-files: font-url($iefont) unquote("format('eot')"), $font-files; 
    }
    src: $font-files;
    @if $weight {
        font-weight: $weight;
    }
    @if $style {
        font-style: $style;
    }
  }
}

// Hyphen

@mixin hyphens($hyphens) {
    @include progressive(hyphens, $hyphens);
}

// Text Shadow

@mixin textShadow($textShadow) {
    @if ($textShadow) {
        text-shadow: $textShadow;
    }
}

// Transform

@mixin transform ($transform) {
    @include progressive(transform, $transform);
}

// Transition

@mixin transition ($type, $time, $ease) {
    @include progressive(transition, $type $time $ease);
}

// Set this to false to disable support for both.
$legacy-support-for-ie: true !default;

// Setting this to false will result in smaller output, but no support for ie6 hacks
$legacy-support-for-ie6: false !default;

// Setting this to false will result in smaller output, but no support for ie7 hacks
$legacy-support-for-ie7: $legacy-support-for-ie !default;

// Setting this to false will result in smaller output, but no support for legacy ie8 hacks
$legacy-support-for-ie8: $legacy-support-for-ie !default;

// @private
// The user can simply set $legacy-support-for-ie and 6, 7, and 8 will be set accordingly,
// But in case the user set each of those explicitly, we need to sync the value of
// this combined variable.
$legacy-support-for-ie: $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8;

@mixin inline-block {
    display: -moz-inline-box;
    -moz-box-orient: vertical;
    display: inline-block;
    vertical-align: middle;

    //@if $legacy-support-for-ie {
        // .ie7 & { display: inline; vertical-align: auto; zoom: 1; }
    //}
}

// Properties
// --------------------------------------------------------- //

    // Background

    @mixin background(
        $shorthand: false,
        $color: false,
        $image: false,
        $repeat: false,
        $position: false,
        $gradient: false,
        $fallback: false
    ) {
        @if ($shorthand or $color or $image or $gradient or $fallback != false) {
            
            @if ($gradient != false) {
                background-color: $color;
                @include progressive-value(background-image, $gradient);
            }
            @else if ($shorthand != false) {
                background: $shorthand;
                // @if ($fallback != false) { .ie7 &, .ie8 & { background: $fallback; } }
                @if ($fallback != false) { .ie8 & { background: $fallback; } }
            }
            @else {
                @if ($color    != false) { background-color: $color; }
                @if ($image    != false) { background-image: $image; }
                @if ($repeat   != false) { background-repeat: $repeat; }
                @if ($position != false) { background-position: $position; }
                // @if ($fallback != false) { .ie7 &, .ie8 & { border-color: $colorFallback; } }
                @if ($fallback != false) { .ie8 & { border-color: $colorFallback; } }
            }
        }
    }

    // Border

    @mixin border(
        $shorthand: false,
        $width: false,
        $style: false,
        $color: false,
        $colorFallback: false
    ) {
        @if ($shorthand or $width or $style or $color or $colorFallback != false) {
            @if ($shorthand != false) {
                border: $shorthand;
            }
            @else {
                @if (         $width != false) { border-width: $width; }
                @if (         $style != false) { border-style: $style; }
                // @if ( $colorFallback != false) { .ie7 &, .ie8 & { border-color: $colorFallback; } }
                @if ( $colorFallback != false) { .ie8 & { border-color: $colorFallback; } }
                @if (         $color != false) { border-color: $color; }            
            }
        }   
    }

@mixin multipleBg-border($borderBg-path, $borderBg-color, $borderBg-width, $borderBg-style) {
    border-color: $borderBg-color;
    border-width: $borderBg-width;
    border-style: $borderBg-style;
    @include progressive(border-image, $borderBg-path);
}

// Custom Checkbox
// --------------------------------------------------------- //

    @mixin custom-checkbox {
        label {
            background: $formLabelFilter-bg;
            @include border($formLabelFilter-borderWidth, $formLabelFilter-borderStyle, $formLabelFilter-borderColor, $formLabelFilter-borderColorFallback);
            @include boxShadow($formLabelFilter-boxShadow);
            font-weight: $formLabelFilterFont-weight;
            padding: $formLabelFilter-padding;
            
            &:before {
                background: $formCheckbox-bg;
                @include border($formCheckbox-borderWidth, $formCheckbox-borderStyle, $formCheckbox-borderColor, $formCheckbox-borderColorFallback);
                @include borderRadius($formCheckbox-borderRadius);
                @include boxShadow($formCheckbox-boxShadow);
                content: "";
                height: $formCheckbox-height;
                @include inline-block;
                margin-right: 4px;
                vertical-align: middle;
                width: $formCheckbox-height;

                &.s-checked { background: $formCheckbox-bgChecked; }
            }

            &:hover:before { background: $formCheckbox-bgHover; }

            input[type="checkbox"] { left: -9999px; position: absolute; }
        }
    }

// Shapes
// --------------------------------------------------------- //

@mixin triangle($direction, $location: ":before", $size: 6px, $color: $tertiaryColor, $spacing: 5px) {
    &:#{$location} {
        content: "";
        display: inline-block;
        height: 0;
        vertical-align: baseline;
        width: 0;

        @if ($direction == "up") {
            border-bottom: $size solid $color;
            border-left: ($size - 1) solid transparent;
            border-right: ($size - 1) solid transparent;
            @if ($location == ":before") {
                margin-right: $spacing;
            }
            @else { margin-left: $spacing; }
        }
        @if ($direction == "down") {
            border-top: $size solid $color;
            border-left: ($size - 1) solid transparent;
            border-right: ($size - 1) solid transparent;
            @if ($location == ":before") {
                margin-right: $spacing;
            }
            @else { margin-left: $spacing; }
        }
        @if ($direction == "left") {
            border-right: $size solid $color;
            border-top: round($size - 1) solid transparent;
            border-bottom: round($size - 1) solid transparent;
            @if ($location == ":before") {
                margin-right: $spacing;
            }
            @else { margin-left: $spacing; }
        }
        @if ($direction == "right") {
            border-left: $size solid $color;
            border-top: ($size - 1) solid transparent;
            border-bottom: ($size - 1) solid transparent;
            @if ($location == ":before") {
                margin-right: $spacing;
            }
            @else { margin-left: $spacing; }
        }
    }
}


// Truncate
// --------------------------------------------------------- //

@mixin truncate {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// Dropdown Menu
// --------------------------------------------------------- //

@mixin dropdownMenu($tail: "no") {

}

// For Retina Displays
// ---------------------------------------------------------------------------------
// Display Retina ready images based off of media queries checking for pixel density
// @  Courtesy of Jason Zimdars of 37 Signals
// ---------------------------------------------------------------------------------
// Use: 
//   .logo {
//      background: url("logo.png") no-repeat;
//      @include image-2x("logo2x.png", 100px, 25px);
//   }
// --------------------------------------------------------- //

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background: $image;
    background-size: $width $height;
  }
}


// For elements which are shown via JavaScript, because they match the current logged in user's ID
*[data-user-only] { display: none !important; }

// Layout Helpers
// --------------------------------------------------------- //

.pull-left { float: left; }
.pull-center { text-align: center; }
.pull-right { float: right; }

// Hide Elements
// --------------------------------------------------------- //

// %j-hide {
//     display: none;
// }
// %hide {
//     display: none !important;
//     visibility: hidden !important;
// }
// .u-hidden,
// button[class*="u-hidden"],
// a[class*="u-hidden"],
// div[class*="u-hidden"],
// span[class*="u-hidden"],
// p[class*="u-hidden"],
// .hide { @extend %j-hide; }

// Image Replacement
// --------------------------------------------------------- //

@mixin ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;
    font-size: 0;
    /* IE 6/7 fallback */
    *text-indent: -9999px;

    &:before {
        content: "";
        display: block;
        width: 0;
        height: 150%;
    }
}
